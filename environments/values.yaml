# your override should supply an envName
envName: null

# if set, override all Applications to use this project
projectOverride: null

default:
  argo:
    destination:
      namespace: argocd
  project:
    roles: |
      - name: read-only
        description: Read-only privileges within project
        policies:
        - p, proj:{{ $.curProjName }}:read-only, applications, get, {{ $.curProjName }}/*, allow
      - name: ci-role
        description: Role to allow CICD pipeline to sync apps within project
        policies:
        - p, proj:{{ $.curProjName }}:ci-role, applications, sync, {{ $.curProjName }}/*, allow
    destinations: |
      - namespace: {{ $.Values.default.app.destination.namespace | required "Missing proj dest namespace"}}
        server: {{ $.Values.default.app.destination.server | required "Missing proj dest server" }}
  app:
    enableAutoSync: true
    autoSyncPrune: true
    autoCreateNamespace: true
    destination:
      namespace: null
      server: https://kubernetes.default.svc
    project: infra
    source:
      path: null
      repoURL: https://github.com/dorroddorrod/demo.git
      targetRevision: HEAD
      extraSourceFields: |
        helm:
          valueFiles:
          - ../values.yaml
          - values.yaml


projects:
  infra:
    description: 'infrastructure project'
    destinations: |
      - namespace: '*'
        server: '*'
    extraFields: |
      clusterResourceWhitelist:
        - group: '*'
          kind: '*'
    sourceRepos:
    - https://github.com/dorroddorrod/demo.git

applications:
  argocd:
    enabled: false
    destination:
      namespace: argocd
      server: null
    source:
      path: applications/argocd/{{ $.Values.envName }}

  prometheus:
    enabled: false
    destination:
      namespace: monitoring
      server: null
    source:
      path: applications/prometheus/{{ $.Values.envName }}

  grafana:
    enabled: false
    destination:
      namespace: monitoring
      server: null
    source:
      path: applications/grafana/{{ $.Values.envName }}

  fluent-bit:
    enabled: false
    destination:
      namespace: monitoring
      server: null
    source:
      path: applications/fluent-bit/{{ $.Values.envName }}

  loki:
    enabled: false
    destination:
      namespace: monitoring
      server: null
    source:
      path: applications/loki/{{ $.Values.envName }}

  mimir:
    enabled: false
    destination:
      namespace: monitoring
      server: null
    source:
      path: applications/mimir/{{ $.Values.envName }}

  tempo:
    enabled: false
    destination:
      namespace: monitoring
      server: null
    source:
      path: applications/tempo/{{ $.Values.envName }}

  keda:
    enabled: false
    destination:
      namespace: keda
      server: null
    source:
      path: applications/keda/{{ $.Values.envName }}

  nginx-ingress:
    enabled: false
    destination:
      namespace: nginx-ingress
      server: null
    source:
      path: applications/nginx-ingress-controller/{{ $.Values.envName }}

  keycloak:
    enabled: false
    destination:
      namespace: keycloak
      server: null
    source:
      path: applications/keycloak/{{ $.Values.envName }}

  oauth2-proxy:
    enabled: false
    destination:
      namespace: keycloak
      server: null
    source:
      path: applications/oauth2-proxy/{{ $.Values.envName }}